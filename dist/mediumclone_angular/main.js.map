{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.routes.ts","./src/app/auth/services/auth.interceptor.ts","./src/app/auth/services/auth.service.ts","./src/app/auth/store/actions.ts","./src/app/auth/store/effects.ts","./src/app/auth/store/reducers.ts","./src/app/shared/components/feed/services/feed.service.ts","./src/app/shared/components/feed/store/actions.ts","./src/app/shared/components/feed/store/effects.ts","./src/app/shared/components/feed/store/reducers.ts","./src/app/shared/components/tags/services/tags.service.ts","./src/app/shared/components/tags/store/actions.ts","./src/app/shared/components/tags/store/effects.ts","./src/app/shared/components/tags/store/reducers.ts","./src/app/shared/components/topBar/topBar.component.ts","./src/app/shared/components/topBar/topBar.component.html","./src/app/shared/services/persistance.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { TopBarComponent } from './shared/components/topBar/topBar.component';\r\nimport { Store } from '@ngrx/store';\r\nimport { authActions } from './auth/store/actions';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  imports: [RouterOutlet, TopBarComponent],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(authActions.getCurrentUser());\r\n  }\r\n}\r\n","<mc-topBar />\r\n<router-outlet></router-outlet>\r\n","import { Route } from '@angular/router';\r\n\r\nexport const appRoutes: Route[] = [\r\n  {\r\n    path: 'register',\r\n    loadChildren: () =>\r\n      import('src/app/auth/auth.routes').then((m) => m.registerRoutes),\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () =>\r\n      import('src/app/auth/auth.routes').then((m) => m.loginRoutes),\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () =>\r\n      import('src/app/globalFeed/globalFeed.routes').then(\r\n        (m) => m.globalFeedRoutes\r\n      ),\r\n  },\r\n  {\r\n    path: 'feed',\r\n    loadChildren: () =>\r\n      import('src/app/yourFeed/yourFeed.routes').then((m) => m.yourFeedRoutes),\r\n  },\r\n  {\r\n    path: 'tags/:slug',\r\n    loadChildren: () =>\r\n      import('src/app/tagFeed/tagFeed.routes').then((m) => m.tagFeedRoutes),\r\n  },\r\n];\r\n","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service';\r\n\r\nexport const authInterceptor: HttpInterceptorFn = (request, next) => {\r\n  const persistenceService = inject(PersistanceService);\r\n  const token = persistenceService.get('accessToken');\r\n  request = request.clone({\r\n    setHeaders: {\r\n      Authorization: token ? `Token ${token}` : '',\r\n    },\r\n  });\r\n\r\n  return next(request);\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CurrentUserInterface } from 'src/app/shared/types/currentUser.interface';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RegisterRequestInterface } from '../types/registerRequest.interface';\r\nimport { Observable, map } from 'rxjs';\r\nimport { AuthResponseInterface } from '../types/authResponse.interface';\r\nimport { LoginRequestInterface } from '../types/loginRequest.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCurrentUser(): Observable<CurrentUserInterface> {\r\n    const url = `${environment.apiURL}/user`;\r\n    return this.http\r\n      .get<AuthResponseInterface>(url)\r\n      .pipe(map((response) => response.user));\r\n  }\r\n\r\n  register(data: RegisterRequestInterface): Observable<CurrentUserInterface> {\r\n    const url = `${environment.apiURL}/users`;\r\n    return this.http\r\n      .post<AuthResponseInterface>(url, data)\r\n      .pipe(map((response) => response.user));\r\n  }\r\n\r\n  login(data: LoginRequestInterface): Observable<CurrentUserInterface> {\r\n    const url = `${environment.apiURL}/users/login`;\r\n    return this.http\r\n      .post<AuthResponseInterface>(url, data)\r\n      .pipe(map((response) => response.user));\r\n  }\r\n}\r\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { RegisterRequestInterface } from '../types/registerRequest.interface';\r\nimport { CurrentUserInterface } from 'src/app/shared/types/currentUser.interface';\r\nimport { BackendErrorsInterface } from '../../shared/types/backendErrors.interface';\r\nimport { LoginRequestInterface } from '../types/loginRequest.interface';\r\n\r\nexport const authActions = createActionGroup({\r\n  source: 'auth',\r\n  events: {\r\n    Register: props<{ request: RegisterRequestInterface }>(),\r\n    'Register success': props<{ currentUser: CurrentUserInterface }>(),\r\n    'Register failure': props<{ errors: BackendErrorsInterface }>(),\r\n    Login: props<{ request: LoginRequestInterface }>(),\r\n    'Login success': props<{ currentUser: CurrentUserInterface }>(),\r\n    'Login failure': props<{ errors: BackendErrorsInterface }>(),\r\n    'Get current user': emptyProps(),\r\n    'Get current user success': props<{ currentUser: CurrentUserInterface }>(),\r\n    'Get current user failure': emptyProps(),\r\n  },\r\n});\r\n","import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { authActions } from './actions';\r\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\r\nimport { CurrentUserInterface } from 'src/app/shared/types/currentUser.interface';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service';\r\nimport { Router } from '@angular/router';\r\n\r\n// ** Register **\r\nexport const registerEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    authService = inject(AuthService),\r\n    persistanceService = inject(PersistanceService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(authActions.register),\r\n      switchMap(({ request }) => {\r\n        return authService.register(request).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            persistanceService.set('accessToken', currentUser.token);\r\n            return authActions.registerSuccess({ currentUser });\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              authActions.registerFailure({\r\n                errors: errorResponse.error.errors,\r\n              })\r\n            );\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n\r\nexport const redirectAfterRegistration = createEffect(\r\n  (actions$ = inject(Actions), router = inject(Router)) => {\r\n    return actions$.pipe(\r\n      ofType(authActions.registerSuccess),\r\n      tap(() => {\r\n        router.navigateByUrl('/');\r\n      })\r\n    );\r\n  },\r\n  { functional: true, dispatch: false }\r\n);\r\n\r\n// ** Login **\r\nexport const loginEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    authService = inject(AuthService),\r\n    persistanceService = inject(PersistanceService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(authActions.login),\r\n      switchMap(({ request }) => {\r\n        return authService.login(request).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            persistanceService.set('accessToken', currentUser.token);\r\n            return authActions.loginSuccess({ currentUser });\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              authActions.loginFailure({\r\n                errors: errorResponse.error.errors,\r\n              })\r\n            );\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n\r\nexport const redirectAfterLogin = createEffect(\r\n  (actions$ = inject(Actions), router = inject(Router)) => {\r\n    return actions$.pipe(\r\n      ofType(authActions.loginSuccess),\r\n      tap(() => {\r\n        router.navigateByUrl('/');\r\n      })\r\n    );\r\n  },\r\n  { functional: true, dispatch: false }\r\n);\r\n\r\n// ** Get Current User **\r\nexport const GetCurrentUserEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    authService = inject(AuthService),\r\n    persistanceService = inject(PersistanceService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(authActions.getCurrentUser),\r\n      switchMap(() => {\r\n        const token = persistanceService.get('accessToken');\r\n        if (!token) {\r\n          return of(authActions.getCurrentUserFailure());\r\n        }\r\n        return authService.getCurrentUser().pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            return authActions.getCurrentUserSuccess({ currentUser });\r\n          }),\r\n          catchError(() => {\r\n            return of(authActions.getCurrentUserFailure());\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { AuthStateInterface } from '../types/authState.interface';\r\nimport { authActions } from './actions';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nconst initialState: AuthStateInterface = {\r\n  isSubmitting: false,\r\n  isLoading: false,\r\n  currentUser: undefined,\r\n  validationErrors: null,\r\n};\r\n\r\nconst authFeature = createFeature({\r\n  name: 'auth',\r\n  reducer: createReducer(\r\n    initialState,\r\n    on(authActions.register, (state) => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    })),\r\n    on(authActions.registerSuccess, (state, actions) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      currentUser: actions.currentUser,\r\n    })),\r\n    on(authActions.registerFailure, (state, actions) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: actions.errors,\r\n    })),\r\n    on(authActions.login, (state) => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    })),\r\n    on(authActions.loginSuccess, (state, actions) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      currentUser: actions.currentUser,\r\n    })),\r\n    on(authActions.loginFailure, (state, actions) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: actions.errors,\r\n    })),\r\n    on(authActions.getCurrentUser, (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    })),\r\n    on(authActions.getCurrentUserSuccess, (state, actions) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      currentUser: actions.currentUser,\r\n    })),\r\n    on(authActions.getCurrentUserFailure, (state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      currentUser: null,\r\n    })),\r\n    on(routerNavigatedAction, (state) => ({ ...state, validationErrors: null }))\r\n  ),\r\n});\r\n\r\nexport const {\r\n  name: authFeatureKey,\r\n  reducer: authReducer,\r\n  selectIsSubmitting,\r\n  selectIsLoading,\r\n  selectCurrentUser,\r\n  selectValidationErrors,\r\n} = authFeature;\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { GetFeedResponseInterface } from '../types/getFeedResponse.interface';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeedService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getFeed(url: string): Observable<GetFeedResponseInterface> {\r\n    const fullUrl = `${environment.apiURL}/${url}`;\r\n    return this.http.get<GetFeedResponseInterface>(fullUrl);\r\n  }\r\n}\r\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { GetFeedResponseInterface } from '../types/getFeedResponse.interface';\r\n\r\nexport const feedActions = createActionGroup({\r\n  source: 'feed',\r\n  events: {\r\n    'Get feed': props<{ url: string }>(),\r\n    'Get feed success': props<{ feed: GetFeedResponseInterface }>(),\r\n    'Get feed failure': emptyProps(),\r\n  },\r\n});\r\n","import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { FeedService } from '../services/feed.service';\r\nimport { feedActions } from './actions';\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { GetFeedResponseInterface } from '../types/getFeedResponse.interface';\r\n\r\nexport const getFeedEffect = createEffect(\r\n  (actions$ = inject(Actions), feedService = inject(FeedService)) => {\r\n    return actions$.pipe(\r\n      ofType(feedActions.getFeed),\r\n      switchMap(({ url }) => {\r\n        return feedService.getFeed(url).pipe(\r\n          map((feed: GetFeedResponseInterface) => {\r\n            return feedActions.getFeedSuccess({ feed });\r\n          }),\r\n          catchError(() => {\r\n            return of(feedActions.getFeedFailure());\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { feedActions } from './actions';\r\nimport { FeedStateInterface } from '../types/feedState.interface';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nconst initialState: FeedStateInterface = {\r\n  isLoading: false,\r\n  error: null,\r\n  data: null,\r\n};\r\n\r\nconst feedFeature = createFeature({\r\n  name: 'feed',\r\n  reducer: createReducer(\r\n    initialState,\r\n    on(feedActions.getFeed, (state) => ({ ...state, isLoading: true })),\r\n    on(feedActions.getFeedSuccess, (state, actions) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: actions.feed,\r\n    })),\r\n    on(feedActions.getFeedFailure, (state) => ({ ...state, isLoading: false })),\r\n    on(routerNavigatedAction, () => initialState)\r\n  ),\r\n});\r\n\r\nexport const {\r\n  name: feedFeatureKey,\r\n  reducer: feedReducer,\r\n  selectIsLoading,\r\n  selectError,\r\n  selectData: selectFeedData,\r\n} = feedFeature;\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { GetTagsResponseInterface } from '../types/getTagsResponse.interface';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PopularTagType } from 'src/app/shared/types/popularTag.type';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TagsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTags(): Observable<PopularTagType[]> {\r\n    const url = `${environment.apiURL}/tags`;\r\n    return this.http\r\n      .get<GetTagsResponseInterface>(url)\r\n      .pipe(map((response) => response.tags));\r\n  }\r\n}\r\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { PopularTagType } from 'src/app/shared/types/popularTag.type';\r\n\r\nexport const tagsActions = createActionGroup({\r\n  source: 'tags',\r\n  events: {\r\n    'Get tags': emptyProps(),\r\n    'Get tags success': props<{ tags: PopularTagType[] }>(),\r\n    'Get tags failure': emptyProps(),\r\n  },\r\n});\r\n","import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { TagsService } from '../services/tags.service';\r\nimport { tagsActions } from './actions';\r\nimport { catchError, map, of, switchMap } from 'rxjs';\r\nimport { PopularTagType } from 'src/app/shared/types/popularTag.type';\r\n\r\nexport const getTagsEffect = createEffect(\r\n  (actions$ = inject(Actions), tagsService = inject(TagsService)) => {\r\n    return actions$.pipe(\r\n      ofType(tagsActions.getTags),\r\n      switchMap(() => {\r\n        return tagsService.getTags().pipe(\r\n          map((tags: PopularTagType[]) => {\r\n            return tagsActions.getTagsSuccess({ tags });\r\n          }),\r\n          catchError(() => {\r\n            return of(tagsActions.getTagsFailure());\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { TagsStateInterface } from '../types/tagsState.interface';\r\nimport { tagsActions } from './actions';\r\nimport { state } from '@angular/animations';\r\n\r\nconst initialState: TagsStateInterface = {\r\n  isLoading: false,\r\n  error: null,\r\n  data: null,\r\n};\r\n\r\nconst tagsFeature = createFeature({\r\n  name: 'tags',\r\n  reducer: createReducer(\r\n    initialState,\r\n    on(tagsActions.getTags, (state) => ({ ...state, isLoading: true })),\r\n    on(tagsActions.getTagsSuccess, (state, actions) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: actions.tags,\r\n    })),\r\n    on(tagsActions.getTagsFailure, (state) => ({ ...state, isLoading: false }))\r\n  ),\r\n});\r\n\r\nexport const {\r\n  name: tagsFeatureKey,\r\n  reducer: tagsReducer,\r\n  selectIsLoading,\r\n  selectData: selectTagsData,\r\n  selectError,\r\n} = tagsFeature;\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { combineLatest } from 'rxjs';\r\nimport { selectCurrentUser } from 'src/app/auth/store/reducers';\r\n\r\n@Component({\r\n  selector: 'mc-topBar',\r\n  templateUrl: './topBar.component.html',\r\n  imports: [RouterLink, CommonModule],\r\n  standalone: true,\r\n})\r\nexport class TopBarComponent {\r\n  data$ = combineLatest({\r\n    currentUser: this.store.select(selectCurrentUser),\r\n  });\r\n\r\n  constructor(private store: Store) {}\r\n}\r\n","<ng-container *ngIf=\"data$ | async as data\">\r\n  <nav class=\"navbar navbar-light\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" routerLink=\"/\">medium</a>\r\n      <ul class=\"nav navbar-nav pull-xs-right\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\r\n        </li>\r\n        <ng-container *ngIf=\"data.currentUser\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/articles/new\">\r\n              <i class=\"ion-compose\"></i>\r\n              &nbsp; New Post\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/settings\">\r\n              <i class=\"ion-gear-a\"></i>\r\n              &nbsp; Settings\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [routerLink]=\"['/profiles', data.currentUser.username]\"\r\n            >\r\n              <img class=\"user-pic\" [src]=\"data.currentUser.image\" />\r\n              &nbsp; {{ data.currentUser.username }}\r\n            </a>\r\n          </li>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"data.currentUser === null\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\">Sign in</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/register\">Sign up</a>\r\n          </li>\r\n        </ng-container>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</ng-container>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistanceService {\r\n  set(key: string, data: unknown): void {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(data));\r\n    } catch (e) {\r\n      console.error('Error saving to a local storage', e);\r\n    }\r\n  }\r\n\r\n  get(key: string): unknown {\r\n    try {\r\n      const localStorageItem = localStorage.getItem(key);\r\n      return localStorageItem ? JSON.parse(localStorageItem) : null;\r\n    } catch (e) {\r\n      console.error('Error getting from local storage', e);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  apiURLdev: 'http://localhost:3000/api',\r\n  apiURL: 'https://api.realworld.io/api',\r\n  limit: 10,\r\n};\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { AppComponent } from './app/app.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideState, provideStore } from '@ngrx/store';\r\nimport { appRoutes } from './app/app.routes';\r\nimport { provideStoreDevtools } from '@ngrx/store-devtools';\r\nimport { isDevMode } from '@angular/core';\r\nimport { authFeatureKey, authReducer } from './app/auth/store/reducers';\r\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\r\nimport { provideEffects } from '@ngrx/effects';\r\nimport * as authEffects from 'src/app/auth/store/effects';\r\nimport * as feedEffects from 'src/app/shared/components/feed/store/effects';\r\nimport * as tagsEffects from 'src/app/shared/components/tags/store/effects';\r\nimport { provideRouterStore, routerReducer } from '@ngrx/router-store';\r\nimport { authInterceptor } from './app/auth/services/auth.interceptor';\r\nimport {\r\n  feedFeatureKey,\r\n  feedReducer,\r\n} from './app/shared/components/feed/store/reducers';\r\nimport {\r\n  tagsFeatureKey,\r\n  tagsReducer,\r\n} from './app/shared/components/tags/store/reducers';\r\n\r\nbootstrapApplication(AppComponent, {\r\n  providers: [\r\n    provideHttpClient(withInterceptors([authInterceptor])),\r\n    provideRouter(appRoutes),\r\n    provideStore({\r\n      router: routerReducer,\r\n    }),\r\n    provideRouterStore(),\r\n    provideState(authFeatureKey, authReducer),\r\n    provideState(feedFeatureKey, feedReducer),\r\n    provideState(tagsFeatureKey, tagsReducer),\r\n    provideEffects(authEffects, feedEffects, tagsEffects),\r\n    provideStoreDevtools({\r\n      maxAge: 25,\r\n      logOnly: !isDevMode(),\r\n      autoPause: true,\r\n      trace: false,\r\n      traceLimit: 75,\r\n    }),\r\n  ],\r\n});\r\n"],"names":["RouterOutlet","TopBarComponent","authActions","AppComponent","constructor","store","ngOnInit","dispatch","getCurrentUser","selectors","standalone","features","decls","vars","template","i0","encapsulation","appRoutes","path","loadChildren","then","m","registerRoutes","loginRoutes","globalFeedRoutes","yourFeedRoutes","tagFeedRoutes","inject","PersistanceService","authInterceptor","request","next","persistenceService","token","get","clone","setHeaders","Authorization","environment","map","AuthService","http","url","apiURL","pipe","response","user","register","data","post","login","factory","providedIn","createActionGroup","emptyProps","props","source","events","Register","Login","Actions","createEffect","ofType","catchError","of","switchMap","tap","Router","registerEffect","actions$","authService","persistanceService","currentUser","set","registerSuccess","errorResponse","registerFailure","errors","error","functional","redirectAfterRegistration","router","navigateByUrl","loginEffect","loginSuccess","loginFailure","redirectAfterLogin","GetCurrentUserEffect","getCurrentUserFailure","getCurrentUserSuccess","createFeature","createReducer","on","routerNavigatedAction","initialState","isSubmitting","isLoading","undefined","validationErrors","authFeature","name","reducer","state","actions","authFeatureKey","authReducer","selectIsSubmitting","selectIsLoading","selectCurrentUser","selectValidationErrors","FeedService","getFeed","fullUrl","feedActions","getFeedEffect","feedService","feed","getFeedSuccess","getFeedFailure","feedFeature","feedFeatureKey","feedReducer","selectError","selectData","selectFeedData","TagsService","getTags","tags","tagsActions","getTagsEffect","tagsService","getTagsSuccess","getTagsFailure","tagsFeature","tagsFeatureKey","tagsReducer","selectTagsData","CommonModule","RouterLink","combineLatest","select","consts","key","localStorage","setItem","JSON","stringify","e","console","localStorageItem","getItem","parse","apiURLdev","limit","bootstrapApplication","provideRouter","provideState","provideStore","provideStoreDevtools","isDevMode","provideHttpClient","withInterceptors","provideEffects","authEffects","feedEffects","tagsEffects","provideRouterStore","routerReducer","providers","maxAge","logOnly","autoPause","trace","traceLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}