{"version":3,"file":"src_app_createArticle_createArticle_route_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAEqC;AAC8D;AAEpB;AAEvB;AACT;;;;;;;ICR/CM,qEAAAA,GAA4C;IAC1CA,4DAAAA,yBAKC;IADCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,wBAAgB;IAAA,EAAC;IACnCA,0DAAAA,EAAkB;IACrBA,mEAAAA,EAAe;;;;;IALXA,uDAAAA,GAA+B;IAA/BA,wDAAAA,uCAA+B;;;ADc7B,MAAOC,sBAAsB;EAajCC,YAAoBC,KAAY;IAAZ,UAAK,GAALA,KAAK;IAZzB,kBAAa,GAA+B;MAC1CC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV;IAED,UAAK,GAAGb,mDAAa,CAAC;MACpBc,YAAY,EAAE,IAAI,CAACL,KAAK,CAACM,MAAM,CAACb,+DAAkB,CAAC;MACnDc,gBAAgB,EAAE,IAAI,CAACP,KAAK,CAACM,MAAM,CAACZ,mEAAsB;KAC3D,CAAC;EAEiC;EAEnCc,QAAQ,CAACC,iBAA6C;IACpD,MAAMC,OAAO,GAA4B;MACvCC,OAAO,EAAEF;KACV;IAED,IAAI,CAACT,KAAK,CAACY,QAAQ,CAACjB,8EAAkC,CAAC;MAAEe;IAAO,CAAE,CAAC,CAAC;EACtE;;AArBWZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAgB;EAAAC;EAAAC,WAAAA,iEAAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBnCvB,wDAAAA,4EAOe;;;;MAPAA,wDAAAA,SAAAA,yDAAAA,kBAAoB;;;iBDcvBL,6GAAoB,EAAEI,yDAAY;EAAAyB;AAAA;;;;;;;;;;;;;;;;;;;;AEbgC;AACN;AACzB;AACS;AACb;AAIjB;AAEnB,MAAMO,MAAM,GAAY,CAC7B;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEhC,uFAAsB;EACjCiC,SAAS,EAAE,CACTT,iFAAoB,EACpBC,6DAAc,CAACC,2CAAoB,CAAC,EACpCC,yDAAY,CAACC,oEAAuB,EAAEC,iEAAoB,CAAC;CAE9D,CACF;;;;;;;;;;;;;;;;;;ACnBsC;AAIoB;;;AAGrD,MAAOL,oBAAoB;EAC/BvB,YAAoBmC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCrB,aAAa,CACXsB,cAAuC;IAEvC,MAAMC,OAAO,GAAG,GAAGH,4EAAkB,WAAW;IAChD,OAAO,IAAI,CAACC,IAAI,CACbI,IAAI,CAA2BF,OAAO,EAAED,cAAc,CAAC,CACvDI,IAAI,CAACP,yCAAG,CAAEQ,QAAQ,IAAKA,QAAQ,CAAC7B,OAAO,CAAC,CAAC;EAC9C;;AAVWW,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAmB,SAApBnB,oBAAoB;AAAA;;;;;;;;;;;;;;;ACTsB;AAKhD,MAAM3B,oBAAoB,GAAG+C,8DAAiB,CAAC;EACpDE,MAAM,EAAE,gBAAgB;EACxBC,MAAM,EAAE;IACN,gBAAgB,EAAEF,kDAAK,EAAwC;IAC/D,wBAAwB,EAAEA,kDAAK,EAAiC;IAChE,wBAAwB,EAAEA,kDAAK;;CAElC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACZqC;AACuB;AACW;AACxB;AACU;AAElB;AAElC,MAAMY,mBAAmB,GAAGP,2DAAY,CAC7C,CACEQ,QAAQ,GAAGV,qDAAM,CAACC,kDAAO,CAAC,EAC1BU,cAAc,GAAGX,qDAAM,CAACxB,iFAAoB,CAAC,KAC3C;EACF,OAAOkC,QAAQ,CAACjB,IAAI,CAClBU,qDAAM,CAACtD,wEAAkC,CAAC,EAC1CyD,+CAAS,CAAC,CAAC;IAAE1C;EAAO,CAAE,KAAI;IACxB,OAAO+C,cAAc,CAAC5C,aAAa,CAACH,OAAO,CAAC,CAAC6B,IAAI,CAC/CP,yCAAG,CAAErB,OAAyB,IAAI;MAChC,OAAOhB,+EAAyC,CAAC;QAAEgB;MAAO,CAAE,CAAC;IAC/D,CAAC,CAAC,EACFuC,gDAAU,CAAES,aAAa,IAAI;MAC3B,OAAOR,wCAAE,CACPxD,+EAAyC,CAAC;QACxCkE,MAAM,EAAEF,aAAa,CAACG,KAAK,CAACD;OAC7B,CAAC,CACH;IACH,CAAC,CAAC,CACH;EACH,CAAC,CAAC,CACH;AACH,CAAC,EACD;EAAEE,UAAU,EAAE;AAAI,CAAE,CACrB;AAEM,MAAMC,yBAAyB,GAAGhB,2DAAY,CACnD,CAACQ,QAAQ,GAAGV,qDAAM,CAACC,kDAAO,CAAC,EAAEkB,MAAM,GAAGnB,qDAAM,CAACQ,mDAAM,CAAC,KAAI;EACtD,OAAOE,QAAQ,CAACjB,IAAI,CAClBU,qDAAM,CAACtD,+EAAyC,CAAC,EACjD0D,yCAAG,CAAC,CAAC;IAAE1C;EAAO,CAAE,KAAI;IAClBsD,MAAM,CAACC,QAAQ,CAAC,CAAC,WAAW,EAAEvD,OAAO,CAACwD,IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC,CACH;AACH,CAAC,EACD;EAAEJ,UAAU,EAAE,IAAI;EAAEnD,QAAQ,EAAE;AAAK,CAAE,CACtC;;;;;;;;;;;;;;;;;;;;AC5C8D;AAEd;AACU;AAE3D,MAAM4D,YAAY,GAAgC;EAChDnE,YAAY,EAAE,KAAK;EACnBE,gBAAgB,EAAE;CACnB;AAED,MAAMkE,oBAAoB,GAAGL,0DAAa,CAAC;EACzCM,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAEN,0DAAa,CACpBG,YAAY,EACZF,+CAAE,CAAC3E,wEAAkC,EAAGiF,KAAK,KAAM;IACjD,GAAGA,KAAK;IACRvE,YAAY,EAAE;GACf,CAAC,CAAC,EACHiE,+CAAE,CAAC3E,+EAAyC,EAAGiF,KAAK,KAAM;IACxD,GAAGA,KAAK;IACRvE,YAAY,EAAE;GACf,CAAC,CAAC,EACHiE,+CAAE,CAAC3E,+EAAyC,EAAE,CAACiF,KAAK,EAAEC,OAAO,MAAM;IACjE,GAAGD,KAAK;IACRrE,gBAAgB,EAAEsE,OAAO,CAAChB;GAC3B,CAAC,CAAC,EACHS,+CAAE,CAACC,qEAAqB,EAAE,MAAMC,YAAY,CAAC;CAEhD,CAAC;AAEK,MAAM;EACXE,IAAI,EAAEhD,uBAAuB;EAC7BiD,OAAO,EAAEhD,oBAAoB;EAC7BlC,kBAAkB;EAClBC;AAAsB,CACvB,GAAG+E,oBAAoB","sources":["./src/app/createArticle/components/createArticle.component.ts","./src/app/createArticle/components/createArticle.component.html","./src/app/createArticle/createArticle.route.ts","./src/app/createArticle/services/createArticle.service.ts","./src/app/createArticle/store/actions.ts","./src/app/createArticle/store/effects.ts","./src/app/createArticle/store/reducers.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { combineLatest } from 'rxjs';\r\nimport { ArticleFormComponent } from 'src/app/shared/components/articleForm/articleForm.component';\r\nimport { ArticleFormValuesInterface } from 'src/app/shared/components/articleForm/types/articleFormValues.interface';\r\nimport { selectIsSubmitting, selectValidationErrors } from '../store/reducers';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { createArticleActions } from '../store/actions';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'mc-create-article',\r\n  templateUrl: 'createArticle.component.html',\r\n  standalone: true,\r\n  imports: [ArticleFormComponent, CommonModule],\r\n})\r\nexport class CreateArticleComponent {\r\n  initialValues: ArticleFormValuesInterface = {\r\n    title: '',\r\n    description: '',\r\n    body: '',\r\n    tagList: [],\r\n  };\r\n\r\n  data$ = combineLatest({\r\n    isSubmitting: this.store.select(selectIsSubmitting),\r\n    validationErrors: this.store.select(selectValidationErrors),\r\n  });\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  onSubmit(articleFormValues: ArticleFormValuesInterface): void {\r\n    const request: ArticleRequestInterface = {\r\n      article: articleFormValues,\r\n    };\r\n\r\n    this.store.dispatch(createArticleActions.createArticle({ request }));\r\n  }\r\n}\r\n","<ng-container *ngIf=\"data$ | async as data\">\r\n  <mc-article-form\r\n    [initialValues]=\"initialValues\"\r\n    [isSubmitting]=\"false\"\r\n    [errors]=\"data.validationErrors\"\r\n    (articleSubmit)=\"onSubmit($event)\"\r\n  ></mc-article-form>\r\n</ng-container>\r\n","import { Route } from '@angular/router';\r\nimport { CreateArticleComponent } from './components/createArticle.component';\r\nimport { CreateArticleService } from './services/createArticle.service';\r\nimport { provideEffects } from '@ngrx/effects';\r\nimport * as createArticleEffects from './store/effects';\r\nimport { provideState } from '@ngrx/store';\r\nimport {\r\n  createArticleFeatureKey,\r\n  createArticleReducer,\r\n} from './store/reducers';\r\n\r\nexport const routes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: CreateArticleComponent,\r\n    providers: [\r\n      CreateArticleService,\r\n      provideEffects(createArticleEffects),\r\n      provideState(createArticleFeatureKey, createArticleReducer),\r\n    ],\r\n  },\r\n];\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { ArticleResponseInterface } from 'src/app/shared/types/articleResponse.interface';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class CreateArticleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createArticle(\r\n    articleRequest: ArticleRequestInterface\r\n  ): Observable<ArticleInterface> {\r\n    const fullUrl = `${environment.apiURL}/articles`;\r\n    return this.http\r\n      .post<ArticleResponseInterface>(fullUrl, articleRequest)\r\n      .pipe(map((response) => response.article));\r\n  }\r\n}\r\n","import { createActionGroup, props } from '@ngrx/store';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { BackendErrorsInterface } from 'src/app/shared/types/backendErrors.interface';\r\n\r\nexport const createArticleActions = createActionGroup({\r\n  source: 'create article',\r\n  events: {\r\n    'Create article': props<{ request: ArticleRequestInterface }>(),\r\n    'Create article success': props<{ article: ArticleInterface }>(),\r\n    'Create article failure': props<{ errors: BackendErrorsInterface }>(),\r\n  },\r\n});\r\n","import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { CreateArticleService } from '../services/createArticle.service';\r\nimport { createArticleActions } from './actions';\r\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { Router } from '@angular/router';\r\n\r\nexport const createArticleEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    articleService = inject(CreateArticleService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(createArticleActions.createArticle),\r\n      switchMap(({ request }) => {\r\n        return articleService.createArticle(request).pipe(\r\n          map((article: ArticleInterface) => {\r\n            return createArticleActions.createArticleSuccess({ article });\r\n          }),\r\n          catchError((errorResponse) => {\r\n            return of(\r\n              createArticleActions.createArticleFailure({\r\n                errors: errorResponse.error.errors,\r\n              })\r\n            );\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n\r\nexport const redirectAfterCreateEffect = createEffect(\r\n  (actions$ = inject(Actions), router = inject(Router)) => {\r\n    return actions$.pipe(\r\n      ofType(createArticleActions.createArticleSuccess),\r\n      tap(({ article }) => {\r\n        router.navigate(['/articles', article.slug]);\r\n      })\r\n    );\r\n  },\r\n  { functional: true, dispatch: false }\r\n);\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { CreateArticleStateInterface } from '../types/createArticleState.interface';\r\nimport { createArticleActions } from './actions';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nconst initialState: CreateArticleStateInterface = {\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n};\r\n\r\nconst createArticleFeature = createFeature({\r\n  name: 'create article',\r\n  reducer: createReducer(\r\n    initialState,\r\n    on(createArticleActions.createArticle, (state) => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    })),\r\n    on(createArticleActions.createArticleSuccess, (state) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    })),\r\n    on(createArticleActions.createArticleFailure, (state, actions) => ({\r\n      ...state,\r\n      validationErrors: actions.errors,\r\n    })),\r\n    on(routerNavigatedAction, () => initialState)\r\n  ),\r\n});\r\n\r\nexport const {\r\n  name: createArticleFeatureKey,\r\n  reducer: createArticleReducer,\r\n  selectIsSubmitting,\r\n  selectValidationErrors,\r\n} = createArticleFeature;\r\n"],"names":["combineLatest","ArticleFormComponent","selectIsSubmitting","selectValidationErrors","createArticleActions","CommonModule","i0","CreateArticleComponent","constructor","store","title","description","body","tagList","isSubmitting","select","validationErrors","onSubmit","articleFormValues","request","article","dispatch","createArticle","selectors","standalone","features","decls","vars","consts","template","encapsulation","CreateArticleService","provideEffects","createArticleEffects","provideState","createArticleFeatureKey","createArticleReducer","routes","path","component","providers","map","environment","http","articleRequest","fullUrl","apiURL","post","pipe","response","factory","createActionGroup","props","source","events","inject","Actions","createEffect","ofType","catchError","of","switchMap","tap","Router","createArticleEffect","actions$","articleService","createArticleSuccess","errorResponse","createArticleFailure","errors","error","functional","redirectAfterCreateEffect","router","navigate","slug","createFeature","createReducer","on","routerNavigatedAction","initialState","createArticleFeature","name","reducer","state","actions"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}