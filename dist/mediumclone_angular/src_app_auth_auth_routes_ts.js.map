{"version":3,"file":"src_app_auth_auth_routes_ts.js","mappings":"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","sources":["./src/app/auth/auth.routes.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.components.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.components.html"],"sourcesContent":["import { Route } from '@angular/router';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nexport const registerRoutes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: RegisterComponent,\r\n  },\r\n];\r\n\r\nexport const loginRoutes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n];\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { authActions } from '../../store/actions';\r\nimport { RouterLink } from '@angular/router';\r\nimport {\r\n  selectIsSubmitting,\r\n  selectValidationErrors,\r\n} from '../../store/reducers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { combineLatest } from 'rxjs';\r\nimport { BackendErrorMessages } from 'src/app/shared/components/backendErrorMessages/backendErrorMessages.component';\r\nimport { LoginRequestInterface } from '../../types/loginRequest.interface';\r\n\r\n@Component({\r\n  selector: 'mc-login',\r\n  templateUrl: './login.components.html',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterLink,\r\n    BackendErrorMessages,\r\n  ],\r\n})\r\nexport class LoginComponent {\r\n  form = this.fb.nonNullable.group({\r\n    email: ['', Validators.required],\r\n    password: ['', [Validators.required, Validators.minLength(5)]],\r\n  });\r\n  data$ = combineLatest({\r\n    isSubmitting: this.store.select(selectIsSubmitting),\r\n    backendErrors: this.store.select(selectValidationErrors),\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private store: Store) {}\r\n\r\n  onSubmit() {\r\n    console.log('form', this.form.getRawValue());\r\n    const request: LoginRequestInterface = {\r\n      user: this.form.getRawValue(),\r\n    };\r\n    this.store.dispatch(authActions.login({ request }));\r\n  }\r\n}\r\n","<ng-container *ngIf=\"data$ | async as data\">\r\n  <div class=\"auth-page\">\r\n    <div class=\"container page\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n          <h1 class=\"text-xs-center\">Sign In</h1>\r\n          <p class=\"text-xs-center\">\r\n            <a routerLink=\"/register\">Need an account?</a>\r\n          </p>\r\n          <mc-backend-error-messages\r\n            *ngIf=\"data.backendErrors\"\r\n            [backendErrors]=\"data.backendErrors\"\r\n          ></mc-backend-error-messages>\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\"\r\n                formControlName=\"password\"\r\n              />\r\n            </fieldset>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-lg btn-primary pull-xs-right\"\r\n              [disabled]=\"data.isSubmitting\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { authActions } from '../../store/actions';\r\nimport { RegisterRequestInterface } from '../../types/registerRequest.interface';\r\nimport { RouterLink } from '@angular/router';\r\nimport {\r\n  selectIsSubmitting,\r\n  selectValidationErrors,\r\n} from '../../store/reducers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { combineLatest } from 'rxjs';\r\nimport { BackendErrorMessages } from 'src/app/shared/components/backendErrorMessages/backendErrorMessages.component';\r\n\r\n@Component({\r\n  selector: 'mc-register',\r\n  templateUrl: './register.components.html',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterLink,\r\n    BackendErrorMessages,\r\n  ],\r\n})\r\nexport class RegisterComponent {\r\n  form = this.fb.nonNullable.group({\r\n    username: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    password: ['', [Validators.required, Validators.minLength(5)]],\r\n  });\r\n  data$ = combineLatest({\r\n    isSubmitting: this.store.select(selectIsSubmitting),\r\n    backendErrors: this.store.select(selectValidationErrors),\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private store: Store) {}\r\n\r\n  onSubmit() {\r\n    console.log('form', this.form.getRawValue());\r\n    const request: RegisterRequestInterface = {\r\n      user: this.form.getRawValue(),\r\n    };\r\n    this.store.dispatch(authActions.register({ request }));\r\n  }\r\n}\r\n","<ng-container *ngIf=\"data$ | async as data\">\r\n  <div class=\"auth-page\">\r\n    <div class=\"container page\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n          <h1 class=\"text-xs-center\">Sign Up</h1>\r\n          <p class=\"text-xs-center\">\r\n            <a routerLink=\"/login\">Have an account?</a>\r\n          </p>\r\n          <mc-backend-error-messages\r\n            *ngIf=\"data.backendErrors\"\r\n            [backendErrors]=\"data.backendErrors\"\r\n          ></mc-backend-error-messages>\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Username\"\r\n                formControlName=\"username\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\"\r\n                formControlName=\"password\"\r\n              />\r\n            </fieldset>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-lg btn-primary pull-xs-right\"\r\n              [disabled]=\"data.isSubmitting\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n"],"names":["RegisterComponent","LoginComponent","registerRoutes","path","component","loginRoutes","Validators","ReactiveFormsModule","authActions","RouterLink","selectIsSubmitting","selectValidationErrors","CommonModule","combineLatest","BackendErrorMessages","i0","constructor","fb","store","nonNullable","group","email","required","password","minLength","isSubmitting","select","backendErrors","onSubmit","console","log","form","getRawValue","request","user","dispatch","login","selectors","standalone","features","decls","vars","consts","template","encapsulation","username","register"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}