{"version":3,"file":"src_app_editArticle_editArticle_route_ts.js","mappings":"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","sources":["./src/app/editArticle/components/editArticle.component.ts","./src/app/editArticle/components/editArticle.component.html","./src/app/editArticle/editArticle.route.ts","./src/app/editArticle/services/editArticle.service.ts","./src/app/editArticle/store/actions.ts","./src/app/editArticle/store/effects.ts","./src/app/editArticle/store/reducers.ts","./src/app/shared/components/loadingMessage/loadingMessage.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable, combineLatest, filter, map } from 'rxjs';\r\nimport { ArticleFormComponent } from 'src/app/shared/components/articleForm/articleForm.component';\r\nimport { ArticleFormValuesInterface } from 'src/app/shared/components/articleForm/types/articleFormValues.interface';\r\nimport {\r\n  selectIsSubmitting,\r\n  selectValidationErrors,\r\n  selectIsLoading,\r\n  selectArticle,\r\n} from '../store/reducers';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { editArticleActions } from '../store/actions';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoadingMessageComponent } from 'src/app/shared/components/loadingMessage/loadingMessage.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\n\r\n@Component({\r\n  selector: 'mc-edit-article',\r\n  templateUrl: 'editArticle.component.html',\r\n  standalone: true,\r\n  imports: [ArticleFormComponent, LoadingMessageComponent, CommonModule],\r\n})\r\nexport class EditArticleComponent implements OnInit {\r\n  initialValues$: Observable<ArticleFormValuesInterface> = this.store.pipe(\r\n    select(selectArticle),\r\n    filter((article): article is ArticleInterface => article !== null),\r\n    map((article: ArticleInterface) => ({\r\n      title: article.title,\r\n      description: article.description,\r\n      body: article.body,\r\n      tagList: article.tagList,\r\n    }))\r\n  );\r\n\r\n  slug = this.route.snapshot.paramMap.get('slug') ?? '';\r\n\r\n  data$ = combineLatest({\r\n    isSubmitting: this.store.select(selectIsSubmitting),\r\n    validationErrors: this.store.select(selectValidationErrors),\r\n    initialValues: this.initialValues$,\r\n    isLoading: this.store.select(selectIsLoading),\r\n  });\r\n\r\n  constructor(private store: Store, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(editArticleActions.getArticle({ slug: this.slug }));\r\n  }\r\n\r\n  onSubmit(articleFormValues: ArticleFormValuesInterface): void {\r\n    const request: ArticleRequestInterface = {\r\n      article: articleFormValues,\r\n    };\r\n\r\n    this.store.dispatch(\r\n      editArticleActions.updateArticle({ request, slug: this.slug })\r\n    );\r\n  }\r\n}\r\n","<ng-container *ngIf=\"data$ | async as data\">\r\n  <mc-loading-message *ngIf=\"data.isLoading\"></mc-loading-message>\r\n  <mc-article-form\r\n    *ngIf=\"data.initialValues\"\r\n    [initialValues]=\"data.initialValues\"\r\n    [isSubmitting]=\"false\"\r\n    [errors]=\"data.validationErrors\"\r\n    (articleSubmit)=\"onSubmit($event)\"\r\n  ></mc-article-form>\r\n</ng-container>\r\n","import { Route } from '@angular/router';\r\nimport { EditArticleComponent } from './components/editArticle.component';\r\nimport { EditArticleService } from './services/editArticle.service';\r\nimport { provideEffects } from '@ngrx/effects';\r\nimport * as editArticleEffects from './store/effects';\r\nimport { provideState } from '@ngrx/store';\r\nimport { editArticleFeatureKey, editArticleReducer } from './store/reducers';\r\n\r\nexport const routes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: EditArticleComponent,\r\n    providers: [\r\n      EditArticleService,\r\n      provideEffects(editArticleEffects),\r\n      provideState(editArticleFeatureKey, editArticleReducer),\r\n    ],\r\n  },\r\n];\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { ArticleResponseInterface } from 'src/app/shared/types/articleResponse.interface';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class EditArticleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  updateArticle(\r\n    articleRequest: ArticleRequestInterface,\r\n    slug: string\r\n  ): Observable<ArticleInterface> {\r\n    const fullUrl = `${environment.apiURL}/articles/${slug}`;\r\n    return this.http\r\n      .put<ArticleResponseInterface>(fullUrl, articleRequest)\r\n      .pipe(map((response) => response.article));\r\n  }\r\n}\r\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { ArticleRequestInterface } from 'src/app/shared/types/articleRequest.interface';\r\nimport { BackendErrorsInterface } from 'src/app/shared/types/backendErrors.interface';\r\n\r\nexport const editArticleActions = createActionGroup({\r\n  source: 'edit article',\r\n  events: {\r\n    'Get article': props<{ slug: string }>(),\r\n    'Get article success': props<{ article: ArticleInterface }>(),\r\n    'Get article failure': emptyProps(),\r\n\r\n    'Update article': props<{\r\n      request: ArticleRequestInterface;\r\n      slug: string;\r\n    }>(),\r\n    'Update article success': props<{ article: ArticleInterface }>(),\r\n    'Update article failure': props<{ errors: BackendErrorsInterface }>(),\r\n  },\r\n});\r\n","import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { EditArticleService } from '../services/editArticle.service';\r\nimport { editArticleActions } from './actions';\r\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\r\nimport { ArticleInterface } from 'src/app/shared/types/article.interface';\r\nimport { Router } from '@angular/router';\r\nimport { ArticleService as SharedArticleService } from 'src/app/shared/services/article.service';\r\n\r\nexport const getArticleEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    articleSharedService = inject(SharedArticleService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(editArticleActions.getArticle),\r\n      switchMap(({ slug }) => {\r\n        return articleSharedService.getArticle(slug).pipe(\r\n          map((article: ArticleInterface) => {\r\n            return editArticleActions.getArticleSuccess({ article });\r\n          }),\r\n          catchError(() => {\r\n            return of(editArticleActions.getArticleFailure());\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n\r\nexport const editArticleEffect = createEffect(\r\n  (\r\n    actions$ = inject(Actions),\r\n    editArticleService = inject(EditArticleService)\r\n  ) => {\r\n    return actions$.pipe(\r\n      ofType(editArticleActions.updateArticle),\r\n      switchMap(({ request, slug }) => {\r\n        return editArticleService.updateArticle(request, slug).pipe(\r\n          map((article: ArticleInterface) => {\r\n            return editArticleActions.updateArticleSuccess({ article });\r\n          }),\r\n          catchError((errorResponse) => {\r\n            return of(\r\n              editArticleActions.updateArticleFailure({\r\n                errors: errorResponse.error.errors,\r\n              })\r\n            );\r\n          })\r\n        );\r\n      })\r\n    );\r\n  },\r\n  { functional: true }\r\n);\r\n\r\nexport const redirectAfterUpdateEffect = createEffect(\r\n  (actions$ = inject(Actions), router = inject(Router)) => {\r\n    return actions$.pipe(\r\n      ofType(editArticleActions.updateArticleSuccess),\r\n      tap(({ article }) => {\r\n        router.navigate(['/articles', article.slug]);\r\n      })\r\n    );\r\n  },\r\n  { functional: true, dispatch: false }\r\n);\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { EditArticleStateInterface } from '../types/editArticleState.interface';\r\nimport { editArticleActions } from './actions';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nconst initialState: EditArticleStateInterface = {\r\n  article: null,\r\n  isLoading: false,\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n};\r\n\r\nconst editArticleFeature = createFeature({\r\n  name: 'edit article',\r\n  reducer: createReducer(\r\n    initialState,\r\n    on(editArticleActions.getArticle, (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    })),\r\n    on(editArticleActions.getArticleSuccess, (state, actions) => ({\r\n      ...state,\r\n      article: actions.article,\r\n      isLoading: false,\r\n    })),\r\n    on(editArticleActions.updateArticleFailure, (state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n    })),\r\n    on(editArticleActions.updateArticle, (state) => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    })),\r\n    on(editArticleActions.updateArticleSuccess, (state) => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    })),\r\n    on(editArticleActions.updateArticleFailure, (state, actions) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      validationErrors: actions.errors,\r\n    })),\r\n    on(routerNavigatedAction, () => initialState)\r\n  ),\r\n});\r\n\r\nexport const {\r\n  name: editArticleFeatureKey,\r\n  reducer: editArticleReducer,\r\n  selectIsSubmitting,\r\n  selectValidationErrors,\r\n  selectIsLoading,\r\n  selectArticle,\r\n} = editArticleFeature;\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mc-loading-message',\r\n  template: '<div>Loading...</div>',\r\n  standalone: true,\r\n})\r\nexport class LoadingMessageComponent {}\r\n"],"names":["select","combineLatest","filter","map","ArticleFormComponent","selectIsSubmitting","selectValidationErrors","selectIsLoading","selectArticle","editArticleActions","CommonModule","LoadingMessageComponent","i0","EditArticleComponent","constructor","store","route","pipe","article","title","description","body","tagList","snapshot","paramMap","get","isSubmitting","validationErrors","initialValues","initialValues$","isLoading","ngOnInit","dispatch","getArticle","slug","onSubmit","articleFormValues","request","updateArticle","selectors","standalone","features","decls","vars","consts","template","encapsulation","EditArticleService","provideEffects","editArticleEffects","provideState","editArticleFeatureKey","editArticleReducer","routes","path","component","providers","environment","http","articleRequest","fullUrl","apiURL","put","response","factory","createActionGroup","emptyProps","props","source","events","inject","Actions","createEffect","ofType","catchError","of","switchMap","tap","Router","ArticleService","SharedArticleService","getArticleEffect","actions$","articleSharedService","getArticleSuccess","getArticleFailure","functional","editArticleEffect","editArticleService","updateArticleSuccess","errorResponse","updateArticleFailure","errors","error","redirectAfterUpdateEffect","router","navigate","createFeature","createReducer","on","routerNavigatedAction","initialState","editArticleFeature","name","reducer","state","actions"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}